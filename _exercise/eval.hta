<!DOCTYPE html>
<html>
<head>
<meta http-equiv="x-ua-compatible" content="IE=edge" />
<HTA:application applicationName="HTA PG" windowState="normal"></HTA:application>
<meta name="AUTHOR" content="YePhIcK">
<title>HTA playground</title>

<style>
*{
  height: 100%;
  width: 100%;
  margin: 0px;
  padding: 0px;
  border: none;
  position: relative;
}
textarea{
  display: block;
}
textarea.code{
  height: 60%;
  background: rgba(0, 255, 255, 0.1);
}
textarea.result{
  float: left;
  width: 60%;
  height: 10%;
  background: rgba(0, 0, 0, 0.1);
}
textarea.exception{
  float: left;
  width: 60%;
  height: 30%;
  background: rgba(255, 0, 0, 0.1);
}
textarea.log{
  float: right;
  width: 40%;
  height: 40%;
  background: rgba(0, 255, 0, 0.1);
}
body>div:first-of-type{
	position: absolute;
	display: none;
	z-index: 10;
	background: rgba(255, 0, 0, 0.1);
	left: 0px;
	top: 0px;
}
body>div:first-of-type.busy{
	display: block;
}
</style>
<script>
var deferredExe = null;
var lastRequest = new Date();
function log(_msg){
	document.querySelector("textarea.log").value += _msg + "\n";
}
function init(){
	window.resizeTo(900, 900);
	document.querySelector("textarea.code").value = "(\n" + sample.toString() + "\n)();"
	launchExe();
}
function scheduleExe(){
	if(deferredExe){
		window.clearTimeout( deferredExe );
	}
	deferredExe = window.setTimeout(launchExe, 3000);
}
function launchExe(){
	document.body.style.cursor='wait';
	document.querySelector("body>div:first-of-type").className = "busy";
	deferredExe = window.setTimeout(exe, 2);
}
function exe(){
	deferredExe = null;
	document.querySelector("textarea.log").value = "";
	document.querySelector("textarea.result").value = "";
	document.querySelector("textarea.exception").value = "";

	var text = document.querySelector("textarea.code").value;
	try{
		var res = eval(text);
		document.querySelector("textarea.result").value = res;
	}
	catch(_e){
		document.querySelector("textarea.result").value = _e.name + "\n" + _e.message;
		document.querySelector("textarea.exception").value = _e.stack;
	}
	window.setTimeout(function(){
		document.body.style.cursor='auto';
		document.querySelector("body>div:first-of-type").className = "";
	}, 2);
}
var sample = function(){
  arr2B64 = function(_arr){
    for(rez = "", i = 0; i < _arr.length; ++i) {rez += String.fromCharCode(_arr[i]);}
    return window.btoa(unescape(encodeURIComponent( rez )));
  }
  b642Arr = function(_str){
    _str = decodeURIComponent(escape(window.atob( _str )));
    for(rez = [], i = 0; i < _str.length; ++i) {rez.push(_str.charCodeAt(i));}
    return rez;
  }

var LZW = {
    compress: function (uncompressed){
        "use strict";
        var i, c, wc, w = "", dictionary = {}, result = [], dictSize = 256;
        for(i = 0; i < 256; ++i) {dictionary[String.fromCharCode(i)] = i;}
 
        for(i = 0; i < uncompressed.length; ++i){
            c = uncompressed.charAt(i);
            wc = w + c;
            if (dictionary.hasOwnProperty(wc)){
                w = wc;
            }else{
                result.push(dictionary[w]);
                dictionary[wc] = dictSize++;
                w = String(c);
            }
        }
        if(w !== "") {result.push(dictionary[w]);}
        return arr2B64( result );
    },
 
    decompress: function (compressed){
        "use strict";
		compressed = b642Arr( compressed );
        var i, w, result, k, entry = "", dictionary = [], dictSize = 256;
        for(i = 0; i < 256; i += 1) {dictionary[i] = String.fromCharCode(i);}
 
        w = String.fromCharCode(compressed[0]);
        result = w;
        for(i = 1; i < compressed.length; i += 1){
            k = compressed[i];
            if(dictionary[k]){entry = dictionary[k];}
            else{
                if(k === dictSize) {entry = w + w.charAt(0);}
                else {return null;}
            }
            result += entry;
            dictionary[dictSize++] = w + entry.charAt(0);
            w = entry;
        }
        return result;
    }
}, // For Test Purposes
    comp = LZW.compress("TOBEORNOTTOBEORTOBEORNOT"),
    decomp = LZW.decompress(comp);

  // see http://msdn.microsoft.com/en-us/library/hww8txat(v=vs.84).aspx for API reference
  var ready = false, shell = undefined, fso = undefined;

  shell = new ActiveXObject("WScript.Shell");
  fso = new ActiveXObject("Scripting.FileSystemObject");
  if( ! shell || ! fso)
    throw "No ActiveX support here (running in browser?)";

  var path = "../exam_DB/";
  var folder = fso.getFolder(path);
  var files = new Enumerator(folder.files);

  var fullText;
  var bin;

  for(; !files.atEnd(); files.moveNext()){
    var ext = fso.getExtensionName(files.item());
    if(ext === "edb"){
      var fname = fso.getBaseName(files.item());
      var fullFName = path + fname + "." + ext;
      var file = fso.getFile(fullFName);
      log("filename is [" + fullFName + "]");
      var fileIn = fso.openTextFile(fullFName, 1, false, 0);
      log("file IN is " + !! fileIn);
      bin = fileIn.readAll();
      log("read " + bin.length + " bytes");
      fileIn.close();
      delete fileIn;
	  try{
        fullText = LZW.decompress( bin );
      }catch(_e){
        log("Failed to decompress, so it must have been plain text data");
        fullText = bin;
      }
      bin = LZW.compress(fullText);
      log("compressed bin is " + bin.length + " bytes");
      fileOut = fso.openTextFile(fullFName, 2, true, 0);
      log("file OUT is " + !! fileIn);
      fileOut.write(bin);
      fileOut.close();
      delete fileOut;
      fullText = LZW.decompress( bin );
      log(fullText.substr(0, 200));
    }
  }

  delete fso;
  delete shell;
  return bin.length + "/" + fullText.length;
}
</script>

</head>
<body onload="init();" onkeyup="scheduleExe();">
	<div></div>
	<textarea class="code"></textarea>
	<textarea class="log"></textarea>
	<textarea class="result"></textarea>
	<textarea class="exception"></textarea>
</body>
</html>